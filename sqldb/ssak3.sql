-- 싹쓰리 테이블
CREATE TABLE SSAK3 (
	NO				NUMBER(1),
	TITLE 			VARCHAR2(100),
	COUNT_DT		VARCHAR(8),
	DOWNLOAD_CNT 	NUMBER(4)
);

INSERT INTO SSAK3 VALUES (1, '다시 여기 바닷가', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));  -- RANDOM.VALUE(100, 1000) 100~1000 사이 랜덤하게
INSERT INTO SSAK3 VALUES (2, '그 여름을 틀어줘', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (3, '여름 안에서 by 싹쓰리(Feat.황광희)', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (4, 'LINDA(Feat.윤미래)', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (5, '두리쥬와(Feat.S.B.N)', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (6, '신난다(Feat.마마무)', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (7, '다시 여기 바닷가(Acoustic Ver.)', '20200801', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (1, '다시 여기 바닷가', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (2, '그 여름을 틀어줘', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (3, '여름 안에서 by 싹쓰리(Feat.황광희)', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (4, 'LINDA(Feat.윤미래)', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (5, '두리쥬와(Feat.S.B.N)', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (6, '신난다(Feat.마마무)', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (7, '다시 여기 바닷가(Acoustic Ver.)', '20200802', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (1, '다시 여기 바닷가', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (2, '그 여름을 틀어줘', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (3, '여름 안에서 by 싹쓰리(Feat.황광희)', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (4, 'LINDA(Feat.윤미래)', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (5, '두리쥬와(Feat.S.B.N)', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (6, '신난다(Feat.마마무)', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));
INSERT INTO SSAK3 VALUES (7, '다시 여기 바닷가(Acoustic Ver.)', '20200803', ROUND(DBMS_RANDOM.VALUE(100, 1000),0));


SELECT * FROM SSAK3;

-- 무작위 랜덤 수 출력
SELECT ROUND(DBMS_RANDOM.VALUE(100,1000),0) 다운로드수 FROM DUAL;


-- 다운로드 수 누적값 구하기 (셀프조인)
SELECT A.NO, 
       MAX(A.TITLE) TITLE,  -- 집계 함수이므로 GROUP BY 해주기
       A.COUNT_DT, 
       MAX(A.DOWNLOAD_CNT) DOWNLOAD_CNT, -- 집계 함수이므로 GROUP BY 해주기
       SUM(B.DOWNLOAD_CNT) "sum" -- 따옴표 안하면 대문자 SUM / 따옴포 하면 소문자
FROM SSAK3 A, SSAK3 B  --셀프조인
WHERE A.NO = B.NO
    AND A.COUNT_DT >= B.COUNT_DT
GROUP BY A.NO, A.COUNT_DT;

-- 날짜순으로 정렬한 다운로드 수 누적값 구하기
SELECT NO, TITLE, COUNT_DT, DOWNLOAD_CNT,
    SUM(DOWNLOAD_CNT) OVER(ORDER BY COUNT_DT) "누적값"    
  FROM SSAK3;

-- 노래 번호별 날짜순으로 정렬한 다운로드 수 누적값 구하기
SELECT NO, TITLE, COUNT_DT, DOWNLOAD_CNT,
    SUM(DOWNLOAD_CNT) OVER(PARTITION BY NO ORDER BY COUNT_DT) "누적값"    
  FROM SSAK3;

-- windowing 함수로 검색하기  -- 셀프 조인보다 간단함  --f10 실행시 비용이 적게 듬 : 3 
SELECT NO, TITLE, COUNT_DT, DOWNLOAD_CNT,
-- ROW BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW 은 생략 가능
    SUM(DOWNLOAD_CNT) OVER(PARTITION BY NO ORDER BY COUNT_DT
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) "누적값",
    SUM(DOWNLOAD_CNT) OVER(PARTITION BY NO ORDER BY COUNT_DT
            ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) "거꾸로누적값"      
  FROM SSAK3;

